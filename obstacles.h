#pragma once

////////////////적만들기시작/////////////////////////////////////////////////////////////////////////////////////////////
#define NUMBER_OF_OBSTACLES 3
#define OBSTACLE_LAUNCH_DELAY_MIN   45
#define OBSTACLE_LAUNCH_DELAY_MAX   80

//////////////////////////적만들기 ObstacleType//////////////////////////////////////////////////////////////////////////////////////////
enum class ObstacleType: uint8_t {
  Benzo1,
  Benzo2,
  Bonnie1,
  Bonnie2,
  Boa1,
  Boa2,
  Blubba1,
  Blubba2,
  Count_AllObstacles = 6,
};
/////////////////////Obstacle struct///////////////////////////////////////////////////////////////////////////////////////////
struct Obstacle {
  int8_t x;
  int8_t y;
  ObstacleType type;
  bool enabled;
  bool jumping;
  uint8_t jumpIndex;
  bool falling;
  uint8_t fallIndex;
  const uint8_t *image;  
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////// 적을 만들자//////////////////////////////////////////////////////////////////////////////////////////////////////////
const uint8_t *obstacle_images[] = { benzo_1, benzo_2, bonnie_1, bonnie_2, boa_1, boa_2, blubba_1, blubba_2 };

/////////////////////////////////////////////////////////////////////////////////////////////적을 만들자////////////////
Obstacle obstacles[NUMBER_OF_OBSTACLES] = {
  {0,0, ObstacleType::Benzo1, false, false, false, false, false, benzo_1},
  {0,0, ObstacleType::Benzo1, false, false, false, false, false, benzo_1},
  {0,0, ObstacleType::Benzo1, false, false, false, false, false, benzo_1},
};
